/*-------------------
      Base Sizes
--------------------*/
@fontSizeRoot                       : 16;
@lineHeight                         : 1.5;
@verticalRhythm                     : (@lineHeight * @fontSizeRoot);
@spacing                            : unit((@verticalRhythm / @fontSizeRoot), rem);
@em                                 : (1 / @fontSizeRoot) + 0em; // px to em conversion
@rem                                : (1 / @fontSizeRoot) + 0rem; // px to rem conversion


/*-------------------
        Sizes
--------------------*/

@miniSizeVal                        : 10;
@tinySizeVal                        : 12;
@smallSizeVal                       : 14;
@mediumSizeVal                      : 18;
@largeSizeVal                       : 24;
@bigSizeVal                         : 36;
@hugeSizeVal                        : 48;
@massiveSizeVal                     : 60;

/*
  Sizes are all expressed in terms of 14px/em (default em)
  This ensures these "ratios" remain constant despite changes in EM
*/

@miniSize                           : (@miniSizeVal / @fontSizeRoot);
@tinySize                           : (@tinySizeVal / @fontSizeRoot);
@smallSize                          : (@smallSizeVal / @fontSizeRoot);
@mediumSize                         : (@mediumSizeVal / @fontSizeRoot);
@largeSize                          : (@largeSizeVal / @fontSizeRoot);
@bigSize                            : (@bigSizeVal / @fontSizeRoot);
@hugeSize                           : (@hugeSizeVal / @fontSizeRoot);
@massiveSize                        : (@massiveSizeVal / @fontSizeRoot);

/*-------------------
       Em Sizes
--------------------*/

/*
  This rounds @size values to the closest pixel then expresses that value in (r)em.
  This ensures all size values round to exact pixels
*/
@mini                               : unit( round(@miniSize * @fontSizeRoot) / @fontSizeRoot, rem);
@tiny                               : unit( round(@tinySize * @fontSizeRoot) / @fontSizeRoot, rem);
@small                              : unit( round(@smallSize * @fontSizeRoot) / @fontSizeRoot, rem);
@medium                             : unit( round(@mediumSize * @fontSizeRoot) / @fontSizeRoot, rem);
@large                              : unit( round(@largeSize * @fontSizeRoot) / @fontSizeRoot, rem);
@big                                : unit( round(@bigSize * @fontSizeRoot) / @fontSizeRoot, rem);
@huge                               : unit( round(@hugeSize * @fontSizeRoot) / @fontSizeRoot, rem);
@massive                            : unit( round(@massiveSize * @fontSizeRoot) / @fontSizeRoot, rem);

/* em */
@relativeMini                       : unit( round(@miniSize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeTiny                       : unit( round(@tinySize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeSmall                      : unit( round(@smallSize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeMedium                     : unit( round(@mediumSize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeLarge                      : unit( round(@largeSize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeBig                        : unit( round(@bigSize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeHuge                       : unit( round(@hugeSize * @fontSizeRoot) / @fontSizeRoot, em);
@relativeMassive                    : unit( round(@massiveSize * @fontSizeRoot) / @fontSizeRoot, em);

/* rem */
@absoluteMini                       : unit( round(@miniSize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteTiny                       : unit( round(@tinySize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteSmall                      : unit( round(@smallSize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteMedium                     : unit( round(@mediumSize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteLarge                      : unit( round(@largeSize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteBig                        : unit( round(@bigSize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteHuge                       : unit( round(@hugeSize * @fontSizeRoot) / @fontSizeRoot, rem);
@absoluteMassive                    : unit( round(@massiveSize * @fontSizeRoot) / @fontSizeRoot, rem);

/*-------------------
     Breakpoints
--------------------*/


@mobileBreakpointPixel              : 320px;
@largeMobileBreakpointPixel         : 480px;
@tabletBreakpointPixel              : 768px;
@computerBreakpointPixel            : 992px;
@largeMonitorBreakpointPixel        : 1280px;
@widescreenMonitorBreakpointPixel   : 1620px;
@desktopNavigationBreakpointPixel   : 1180px;
// Stacked
@notStackedBreakpointPixel          : @tabletBreakpointPixel; 
// Site Max Width
@site-max-widthPixel                : @largeMonitorBreakpointPixel;

/* Responsive */
@largestMediumMobileScreenPixel     : (@largeMobileBreakpointPixel - 1px);
@largestMobileScreenPixel           : (@tabletBreakpointPixel - 1px);
@largestTabletScreenPixel           : (@computerBreakpointPixel - 1px);
@largestSmallMonitorPixel           : (@largeMonitorBreakpointPixel - 1px);
@largestLargeMonitorPixel           : (@widescreenMonitorBreakpointPixel - 1px);
@largestMobileNavigationPixel       : (@desktopNavigationBreakpointPixel - 1px);
// Stacked
@largestStackedScreenPixel          : (@notStackedBreakpointPixel - 1px);


// Var defines whether px or em for breakpoints.
@breakpoint-value: em; // em || px

.breakpoint-values(px) {
    @mobileBreakpoint               : @mobileBreakpointPixel;
    @largeMobileBreakpoint          : @largeMobileBreakpointPixel;
    @tabletBreakpoint               : @tabletBreakpointPixel;
    @computerBreakpoint             : @computerBreakpointPixel;
    @largeMonitorBreakpoint         : @largeMonitorBreakpointPixel;
    @widescreenMonitorBreakpoint    : @widescreenMonitorBreakpointPixel;
    @desktopNavigationBreakpoint    : @desktopNavigationBreakpointPixel;
    @largestMediumMobileScreen      : @largestMediumMobileScreenPixel;
    @largestMobileScreen            : @largestMobileScreenPixel;
    @largestTabletScreen            : @largestTabletScreenPixel;
    @largestSmallMonitor            : @largestSmallMonitorPixel;
    @largestLargeMonitor            : @largestLargeMonitorPixel;
    @largestMobileNavigation        : @largestMobileNavigationPixel;
    // Stacked
    @largestStackedScreen           : @largestStackedScreenPixel; 
    @site-max-width                 : @site-max-widthPixel;
}

.breakpoint-values(em) {
    @mobileBreakpoint               : unit((unit(@mobileBreakpointPixel) / @fontSizeRoot), em);
    @largeMobileBreakpoint          : unit((unit(@largeMobileBreakpointPixel) / @fontSizeRoot), em);
    @tabletBreakpoint               : unit((unit(@tabletBreakpointPixel) / @fontSizeRoot), em);
    @computerBreakpoint             : unit((unit(@computerBreakpointPixel) / @fontSizeRoot), em);
    @largeMonitorBreakpoint         : unit((unit(@largeMonitorBreakpointPixel) / @fontSizeRoot), em);
    @widescreenMonitorBreakpoint    : unit((unit(@widescreenMonitorBreakpointPixel) / @fontSizeRoot), em);
    @desktopNavigationBreakpoint    : unit((unit(@desktopNavigationBreakpointPixel) / @fontSizeRoot), em);
    @largestMediumMobileScreen      : unit((unit(@largestMediumMobileScreenPixel) / @fontSizeRoot), em);
    @largestMobileScreen            : unit((unit(@largestMobileScreenPixel) / @fontSizeRoot), em);
    @largestTabletScreen            : unit((unit(@largestTabletScreenPixel) / @fontSizeRoot), em);
    @largestSmallMonitor            : unit((unit(@largestSmallMonitorPixel) / @fontSizeRoot), em);
    @largestLargeMonitor            : unit((unit(@largestLargeMonitorPixel) / @fontSizeRoot), em);
    @largestMobileNavigation        : unit((unit(@largestMobileNavigationPixel) / @fontSizeRoot), em);
    // Stacked
    @largestStackedScreen           : unit((unit(@largestStackedScreenPixel) / @fontSizeRoot), em);
    @site-max-width                 : unit((unit(@site-max-widthPixel) / @fontSizeRoot), em);
}

.breakpoint-values(@breakpoint-value);

// COLOURS
//////////////////////////////////////////
@jacarta                            : #442666;
@eminence                           : #652767;
@dune                               : #2D2926;
@palma                              : #10A815;
@cardinal                           : #C62525;
@stark-white                        : #E4DCC0;
@off-yellow                         : #FEFBE7;

.dune-rgb() {
  @red: red(@dune);
  @green: green(@dune);
  @blue: blue(@dune);
}

.stark-white-rgb() {
  @red: red(@stark-white);
  @green: green(@stark-white);
  @blue: blue(@stark-white);
}


@body-bg-color                      : @dune;

// HEADER
//////////////////////////////////////////
@header-h-m                         : 65;
@header-h-t                         : 100;
@header-h-c                         : 100;

@logo-max-w                         : 132;

// FOOTER
//////////////////////////////////////////
@footer-h-m                         : 87;
@footer-h-t                         : 87;
@footer-h-c                         : 87;